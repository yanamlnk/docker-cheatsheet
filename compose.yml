version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - poll-tier
      - back-tier
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - back-tier
      - result-tier
    restart: unless-stopped

  worker:
    build: ./worker
    environment:
      - REDIS_HOST=redis 
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - back-tier
    depends_on:
      - redis
      - db
    restart: unless-stopped
    
  poll:
    build: ./poll
    ports:
      - "5000:80"
    environment:
      - REDIS_HOST=redis 
      - OPTION_A=${OPTION_A}
      - OPTION_B=${OPTION_B}
      - OPTION_C=${OPTION_C}
      - OPTION_D=${OPTION_D}
    networks:
      - poll-tier
    depends_on:
      - redis 
    restart: unless-stopped

  result:
    build: ./result
    ports:
      - "5001:80"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - result-tier
    depends_on:
      - db
    restart: unless-stopped

networks:
  poll-tier:
  result-tier:
  back-tier:

volumes:
  db-data: